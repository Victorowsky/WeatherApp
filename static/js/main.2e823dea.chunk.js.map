{"version":3,"sources":["comp/AnswerData.js","App.js","index.js"],"names":["AnswerData","data","imgLink","isPolish","hours","time","Date","toLocaleDateString","minutes","getUTCMinutes","className","name","sys","country","title","clouds","all","src","alt","srcSet","getDay","Math","round","main","temp","temp_max","temp_min","App","useState","lang","setLang","cities","floor","random","length","city","setCity","FetchURL","iconID","setIconID","setData","setIsPolish","setHours","useEffect","fetch","then","res","json","cod","newHours","getUTCHours","timezone","weather","icon","localStorage","getItem","setItem","TextField","value","onChange","e","target","id","label","variant","CircularProgress","Switch","color","checked","previousIsPolish","prev","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e823dea.chunk.js","sourcesContent":["const AnswerData = ({data, imgLink , isPolish, hours}) => {\r\n    const weekDaysPolish = [\r\n        \"Poniedziałek\",\r\n        \"Wtorek\",\r\n        \"Środa\",\r\n        \"Czwartek\",\r\n        \"Piątek\",\r\n        \"Sobota\",\r\n        \"Niedziela\",\r\n      ];\r\n    \r\n      const weekDays = [\r\n        \"Monday\",\r\n        \"Tuesday\",\r\n        \"Wednesday\",\r\n        \"Thursday\",\r\n        \"Friday\",\r\n        \"Saturday\",\r\n        \"Sunday\",\r\n      ];\r\n  const time = new Date().toLocaleDateString();\r\n  const minutes = new Date().getUTCMinutes()\r\n\r\n    return ( \r\n        <div className=\"answerData\">\r\n        <div className=\"location\">\r\n          <h1 className=\"cityName\">\r\n            {data.name}, {data.sys.country}\r\n          </h1>\r\n\r\n\r\n          <div title={`Clouds: ${data.clouds.all}%`} className=\"temperatureAnswer2\">\r\n            <img className=\"weatherIcon\" src={imgLink} alt=\"\" srcSet=\"\"/>\r\n          </div>\r\n          \r\n\r\n          <div className=\"localeTime\">\r\n            <p>\r\n              {isPolish\r\n                ? `${weekDaysPolish[new Date().getDay() - 1]}`\r\n                : `${weekDays[new Date().getDay() - 1]}`}\r\n            </p>\r\n            <p>{new Date().getDay() < 10 ? `0${time}` : time}</p>\r\n              <div>{hours < 10 ?\r\n                <p>{minutes < 10 ? `0${hours}:0${minutes}` : `0${hours}:${minutes}` }</p> : \r\n                <p>{minutes < 10 ? `${hours}:0${minutes}` : `${hours}:${minutes}` }</p>}</div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"temperature\">\r\n          <h2 title=\"Current\" className=\"primaryTemperature\">{`${Math.round(data.main.temp)}℃`}</h2>\r\n          <h4 title=\"MAX/MIN\" className=\"secondaryTemperature\">{`${Math.round(data.main.temp_max)}℃ / ${Math.round(\r\n            data.main.temp_min\r\n          )}℃`}</h4>\r\n        </div>\r\n      </div>\r\n     );\r\n}\r\n \r\nexport default AnswerData;","import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport TextField from \"@material-ui/core/TextField\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Switch from \"@material-ui/core/Switch\";\nimport AnswerData from './comp/AnswerData';\n// import CloudWithSunIcon from './comp/CloudWithSunIcon';\n// import SunIcon from './comp/SunIcon';\n// import HotIcon from './comp/HotIcon';\n// import SnowBallIcon from './comp/SnowBallIcon';\n// import CloudsIcon from './comp/CloudsIcon';\n\nfunction App() {\n  const API_KEY = \"40606d1a7691345518b8f45275e22d47\";\n  const [lang, setLang] = useState(\"eng\");\n  const cities = ['Warsaw', 'Paris', 'Madrid', 'Berlin', 'Barcelona', 'Rio', 'New York', 'Chicago', 'London', 'Rome', 'Tokyo']\n  const [city, setCity] = useState(cities[Math.floor(Math.random()*cities.length)]);\n  const FetchURL = `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&lang=${lang}&appid=${API_KEY}`;\n  const [iconID, setIconID] = useState('01d')\n  const imgLink = `https://openweathermap.org/img/wn/${iconID}@2x.png`\n  const [data, setData] = useState([]);\n  const [isPolish, setIsPolish] = useState(false);\n  const [hours, setHours] = useState('') \n\n  useEffect(() => {\n    fetch(FetchURL)\n      .then((res) => res.json())\n      .then((res) => {\n        if (res.cod === 200) {\n          setData(res);\n            let newHours  = new Date().getUTCHours()\n            newHours += res.timezone/3600\n            if(newHours >= 24 ){\n              newHours-=24\n              setHours(newHours)\n            }else{\n              setHours(new Date().getUTCHours() +res.timezone/3600)\n            }\n          setIconID(res.weather[0].icon)\n        }\n      });\n\n    if (!localStorage.getItem(\"isPolish\")) {\n      localStorage.setItem(\"isPolish\", false);\n    }\n    if (localStorage.getItem(\"isPolish\") === \"false\") {\n      setIsPolish(false);\n    } else {\n      setIsPolish(true);\n    }\n  }, [city, FetchURL]);\n\n  return (\n    <div className=\"app\">\n      <div className=\"weatherApp\">\n        <div className=\"inputCity\">\n          <h2>{isPolish ? \"Podaj nazwe miasta\" : \"Enter city name\"}</h2>\n          <TextField\n            value={city}\n            onChange={(e) => setCity(e.target.value)}\n            id=\"outlined-basic\"\n            label={isPolish ? \"Miasto\" : \"City\"}\n            variant=\"outlined\"\n\n          />\n        </div>\n        {data.main ? (\n           <AnswerData\n            data={data} \n            imgLink={imgLink}\n            isPolish={isPolish}\n            hours={hours} />\n        ) : (\n          <CircularProgress />\n        )}\n        \n      </div>\n      <div className=\"languageSwitch\">\n        ENG\n        <Switch\n          color=\"default\"\n          id=\"switch\"\n          checked={isPolish}\n          onChange={() => {\n            let previousIsPolish;\n            setIsPolish((prev) => !prev);\n            setLang((prev) => (prev === \"eng\" ? \"pl\" : \"eng\"));\n            if (localStorage.getItem(\"isPolish\") === \"false\") {\n              previousIsPolish = \"true\";\n            } else {\n              previousIsPolish = \"false\";\n            }\n            localStorage.setItem(\"isPolish\", previousIsPolish);\n          }}\n        />\n        PL\n      </div>\n          \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}