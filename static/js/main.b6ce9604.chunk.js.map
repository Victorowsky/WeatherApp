{"version":3,"sources":["App.js","index.js"],"names":["App","useState","city","setCity","lang","setLang","FetchURL","data","setData","isPolish","setIsPolish","time","Date","toLocaleDateString","getUTCHours","useEffect","fetch","then","res","json","cod","localStorage","getItem","setItem","className","TextField","value","onChange","e","target","id","label","variant","color","main","name","sys","country","temp","onClick","classList","add","fontSize","style","getDay","Math","round","temp_max","temp_min","CircularProgress","Switch","checked","previousIsPolish","prev","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAgJeA,MAxIf,WACE,IADa,EAEWC,mBAAS,UAFpB,mBAENC,EAFM,KAEAC,EAFA,OAGWF,mBAAS,OAHpB,mBAGNG,EAHM,KAGAC,EAHA,KAIPC,EAAQ,2DAAuDJ,EAAvD,8BAAiFE,EAAjF,kBAHE,oCADH,EAKWH,mBAAS,IALpB,mBAKNM,EALM,KAKAC,EALA,OAMmBP,oBAAS,GAN5B,mBAMNQ,EANM,KAMIC,EANJ,KAQPC,GAAO,IAAIC,MAAOC,qBARX,EASaZ,oBAAS,IAAIW,MAAOE,eATjC,mBAyDb,OAzDa,UAoCbC,qBAAU,WACRC,MAAMV,GACHW,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACC,GACW,MAAZA,EAAIE,KACNZ,EAAQU,MAIRG,aAAaC,QAAQ,aACvBD,aAAaE,QAAQ,YAAY,GAGK,UAArCF,aAAaC,QAAQ,YACtBZ,GAAY,GAEZA,GAAY,KAGf,CAACR,EAAMI,IAGR,sBAAKkB,UAAU,MAAf,UACE,sBAAKA,UAAU,aAAf,UACE,sBAAKA,UAAU,YAAf,UACE,6BAAKf,EAAW,qBAAuB,oBACvC,cAACgB,EAAA,EAAD,CACEC,MAAOxB,EACPyB,SAAU,SAACC,GAAD,OAAOzB,EAAQyB,EAAEC,OAAOH,QAClCI,GAAG,iBACHC,MAAOtB,EAAW,SAAW,OAC7BuB,QAAQ,WACRC,MAAM,aAGT1B,EAAK2B,KACJ,sBAAKV,UAAU,aAAf,UACE,sBAAKA,UAAU,WAAf,UACE,qBAAIA,UAAU,WAAd,UACGjB,EAAK4B,KADR,KACgB5B,EAAK6B,IAAIC,WAExB9B,EAAK2B,KAAKI,KAAO,EAChB,cAAC,IAAD,CACEC,QAAS,SAACX,GAAD,OAAOA,EAAEC,OAAOW,UAAUC,IAAI,UACvCC,SAAS,QACTC,MAAO,CAAEV,MAAO,aAGlB,cAAC,IAAD,CACES,SAAS,QACTT,MAAM,UACNU,MAAO,CAAEV,MAAO,aAIpB,sBAAKT,UAAU,aAAf,UACE,4BACW,UAARf,EAnFM,CACrB,oBACA,SACA,aACA,WACA,cACA,SACA,cA6EoC,IAAIG,MAAOgC,SAAW,GA1E3C,CACf,SACA,UACA,YACA,WACA,SACA,WACA,WAoE8B,IAAIhC,MAAOgC,SAAW,MAExC,6BAAI,IAAIhC,MAAOgC,SAAW,GAAtB,WAA+BjC,GAASA,UAIhD,sBAAKa,UAAU,cAAf,UACE,uCAAQqB,KAAKC,MAAMvC,EAAK2B,KAAKI,MAA7B,YACA,uCAAQO,KAAKC,MAAMvC,EAAK2B,KAAKa,UAA7B,oBAA6CF,KAAKC,MAChDvC,EAAK2B,KAAKc,UADZ,kBAMJ,cAACC,EAAA,EAAD,OAGJ,sBAAKzB,UAAU,iBAAf,gBAEE,cAAC0B,EAAA,EAAD,CACEjB,MAAM,UACNH,GAAG,SACHqB,QAAS1C,EACTkB,SAAU,WACR,IAAIyB,EACJ1C,GAAY,SAAC2C,GAAD,OAAWA,KACvBhD,GAAQ,SAACgD,GAAD,MAAoB,QAATA,EAAiB,KAAO,SAExCD,EADqC,UAArC/B,aAAaC,QAAQ,YACF,OAEA,QAEtBD,aAAaE,QAAQ,WAAY6B,MAfvC,YClHNE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b6ce9604.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport TextField from \"@material-ui/core/TextField\";\nimport WbSunnyIcon from \"@material-ui/icons/WbSunny\";\nimport AcUnitIcon from \"@material-ui/icons/AcUnit\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Switch from \"@material-ui/core/Switch\";\n\nfunction App() {\n  const API_KEY = \"40606d1a7691345518b8f45275e22d47\";\n  const [city, setCity] = useState(\"Warsaw\");\n  const [lang, setLang] = useState(\"eng\");\n  const FetchURL = `http://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&lang=${lang}&appid=${API_KEY}`;\n  const [data, setData] = useState([]);\n  const [isPolish, setIsPolish] = useState(false);\n\n  const time = new Date().toLocaleDateString();\n  const [hours, setHours] = useState(new Date().getUTCHours());\n  const weekDaysPolish = [\n    \"Poniedziałek\",\n    \"Wtorek\",\n    \"Środa\",\n    \"Czwartek\",\n    \"Piątek\",\n    \"Sobota\",\n    \"Niedziela\",\n  ];\n\n  const weekDays = [\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n    \"Sunday\",\n  ];\n\n  const checkHours = () => {\n    if (hours > 24) {\n      setHours((prev) => console.log(prev - 24));\n    }\n  };\n\n  useEffect(() => {\n    fetch(FetchURL)\n      .then((res) => res.json())\n      .then((res) => {\n        if (res.cod === 200) {\n          setData(res);\n        }\n      });\n      \n      if(!localStorage.getItem('isPolish')){\n        localStorage.setItem(\"isPolish\", false)\n      }\n\n      if(localStorage.getItem('isPolish') === \"false\"){\n        setIsPolish(false)\n      }else{\n        setIsPolish(true)\n      }\n\n  }, [city, FetchURL]);\n\n  return (\n    <div className=\"app\">\n      <div className=\"weatherApp\">\n        <div className=\"inputCity\">\n          <h2>{isPolish ? \"Podaj nazwe miasta\" : \"Enter city name\"}</h2>\n          <TextField\n            value={city}\n            onChange={(e) => setCity(e.target.value)}\n            id=\"outlined-basic\"\n            label={isPolish ? \"Miasto\" : \"City\"}\n            variant=\"outlined\"\n            color=\"white\"\n          />\n        </div>\n        {data.main ? (\n          <div className=\"answerData\">\n            <div className=\"location\">\n              <h1 className=\"cityName\">\n                {data.name}, {data.sys.country}\n              </h1>\n              {data.main.temp > 0 ? (\n                <WbSunnyIcon\n                  onClick={(e) => e.target.classList.add(\"round\")}\n                  fontSize=\"large\"\n                  style={{ color: \"#faa307\" }}\n                />\n              ) : (\n                <AcUnitIcon\n                  fontSize=\"large\"\n                  color=\"inherit\"\n                  style={{ color: \"#0096c7\" }}\n                />\n              )}\n\n              <div className=\"localeTime\">\n                <p>\n                  {isPolish\n                    ? `${weekDaysPolish[new Date().getDay() - 1]}`\n                    : `${weekDays[new Date().getDay() - 1]}`}\n                </p>\n                <p>{new Date().getDay() < 10 ? `0${time}` : time}</p>\n              </div>\n            </div>\n\n            <div className=\"temperature\">\n              <h2>{`${Math.round(data.main.temp)}℃`}</h2>\n              <h4>{`${Math.round(data.main.temp_max)}℃ / ${Math.round(\n                data.main.temp_min\n              )}℃`}</h4>\n            </div>\n          </div>\n        ) : (\n          <CircularProgress />\n        )}\n      </div>\n      <div className=\"languageSwitch\">\n        ENG\n        <Switch\n          color=\"default\"\n          id=\"switch\"\n          checked={isPolish}\n          onChange={() => {\n            let previousIsPolish\n            setIsPolish((prev) => !prev);\n            setLang((prev) => (prev === \"eng\" ? \"pl\" : \"eng\"))\n            if(localStorage.getItem('isPolish') === \"false\"){\n               previousIsPolish = 'true'\n            }else{\n               previousIsPolish = 'false'\n            }\n            localStorage.setItem('isPolish', previousIsPolish)\n          }}\n        />\n        PL\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}